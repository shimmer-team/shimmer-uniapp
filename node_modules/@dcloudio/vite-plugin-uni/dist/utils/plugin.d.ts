import type { Plugin } from 'vite';
import { UniViteCopyPluginTarget, UniVitePlugin } from '@dcloudio/uni-cli-shared';
import type { TemplateCompiler } from '@vue/compiler-sfc';
import { VitePluginUniResolvedOptions } from '..';
export declare function initPluginUniOptions(UniVitePlugins: UniVitePlugin[]): {
    compiler: TemplateCompiler | undefined;
    copyOptions: {
        assets: string[];
        targets: UniViteCopyPluginTarget[];
    };
    transformEvent: Record<string, string>;
    compilerOptions: {
        miniProgram?: {
            emitFile?: ((emittedFile: import("rollup").EmittedAsset) => string) | undefined;
        } | undefined;
        isNativeTag?: ((tag: string) => boolean) | undefined;
        isCustomElement?: ((tag: string) => boolean | void) | undefined;
        directiveTransforms?: Record<string, import("@vue/compiler-core").DirectiveTransform | undefined> | undefined;
        nodeTransforms?: import("@vue/compiler-core").NodeTransform[] | undefined;
    };
    jsxOptions: {
        babelPlugins?: any[] | undefined;
    };
};
export declare function initExtraPlugins(cliRoot: string, platform: UniApp.PLATFORM, options: VitePluginUniResolvedOptions): Plugin[];
